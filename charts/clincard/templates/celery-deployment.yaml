{{- if eq (include "cel_enable" .) "true" }}
{{- $deployment := .Values.celery }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {{ include "service.labels" . | nindent 4 }}
    component: {{ template "service.celery.fullname" . }}
    tier: {{ default "base" .Values.tier }}
  name: {{ template "service.celery.fullname" . }}
spec:
  progressDeadlineSeconds: {{ default 600 $deployment.progressDeadlineSeconds}}
  replicas: {{ include "cel_replicas" . }}
  revisionHistoryLimit: {{ default 10 $deployment.revisionHistoryLimit }}
  selector:
    matchLabels: {{ include "service.selectorLabels" . | nindent 6 }}
      component: {{ template "service.celery.fullname" . }}
      tier: {{ default "base" .Values.tier }}
  strategy:
    rollingUpdate:
      maxSurge: {{ default "50%" $deployment.strategyMaxSurge }}
      maxUnavailable: {{ default "20%" $deployment.strategyMaxUnavailable }}
    type: {{ default "RollingUpdate" $deployment.strategyType }}
  template:
    metadata:
      labels: {{ include "service.selectorLabels" . | nindent 8 }}
        component: {{ template "service.celery.fullname" . }}
        tier: {{ default "base" .Values.tier }}
    spec:
      initContainers: {{ include (print .Template.BasePath "/_deployment_initcontainers.yaml.tpl") . | nindent 6 }}
      - name: wait-for-database
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-portaldb-{{ include "pdb_adm" . }}
              name: postgres-admin
        image: {{ include "pgimage" . }}
        command: ['sh', '-c', 'until pg_isready -h {{ include "psvc" . }}.{{ .Release.Namespace }} -U {{ include "pusr" . }} -d {{ include "pdb" . }}; do echo waiting for database; sleep 2; done;']
      containers:
      - args:
        - celery
        - -A
        - web.celery_worker:app        
        - worker
        - -l
        - info
        env:
{{ include (print .Template.BasePath "/_common_db_env.yaml.tpl"  ) . |  indent 8 }}        
{{ include (print .Template.BasePath "/_common_rmq_env.yaml.tpl" ) . |  indent 8 }}
{{ include (print .Template.BasePath "/_common_svc_env.yaml.tpl" ) . |  indent 8 }}
{{ include (print .Template.BasePath "/_common_task_envs.yaml.tpl" ) . |  indent 8 }}
{{- range $key, $value := $deployment.customEnv }}
        - name: {{ $key }}
          value: {{ $value | quote }}
{{- end }}        
        image: {{ .Values.images.task }}
        imagePullPolicy: {{ default "IfNotPresent" $deployment.imagePullPolicy }}
        name: {{ default "celery-worker" $deployment.containerName }}
        resources:
          limits:
            cpu: {{ default "512m" $deployment.resourcesLimitsCpu }}
            memory: {{ default "650Mi" $deployment.resourcesLimitsMemory }}
          requests:
            cpu: {{ default "10m" $deployment.resourcesRequestsCpu }}
            memory: {{ default "64Mi" $deployment.resourcesRequestsMemory }}        
        terminationMessagePath: {{ default "/dev/termination-log" $deployment.terminationMessagePath }}
        terminationMessagePolicy: {{ default "File" $deployment.terminationMessagePolicy }}
        workingDir: {{ default "/clincard/src/greenphire" $deployment.workingDir }}
      dnsPolicy: {{ default "ClusterFirst" $deployment.dnsPolicy }}
      restartPolicy: {{ default "Always" $deployment.restartPolicy }}
      schedulerName: {{ default "default-scheduler" $deployment.schedulerName }}
      {{- with $deployment.securityContext }}
      securityContext:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ default 30 $deployment.terminationGracePeriodSeconds }}      
{{- end }}
