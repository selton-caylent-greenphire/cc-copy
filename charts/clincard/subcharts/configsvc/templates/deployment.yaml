---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "configsvc.fullname" . }}
  labels: {{ include "configsvc.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{ include "configsvc.selectorLabels" . | nindent 6 }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  progressDeadlineSeconds: {{ default 600 .Values.progressDeadlineSeconds }}
  revisionHistoryLimit: {{ default 10 .Values.revisionHistoryLimit }}
  {{- if .Values.rollingUpdateDeploymentStrategy.enabled }}
  strategy: 
    type: {{ default "RollingUpdate" .Values.deploymentStrategyType }}
    rollingUpdate: {{ include "configsvc.rollingUpdateDeploymentStrategy" . | nindent 6 }}
  {{- end }}
  template:
    metadata:
      labels: {{ include "configsvc.selectorLabels" . | nindent 8 }}        
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.initContainersSrc }}
      initContainers:
{{ include (print .Template.BasePath .Values.initContainersSrc ) . |  indent 8 }}
      {{- end }}
      containers:
      - name: {{ include "configsvc.fullname" . }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy }}
        command: ["/bin/bash"]  
        args:
        - -c
        - pip install python-logstash git+https://github.com/Greenphire/jslog4kube.git && config-service -d
        ports:
        - containerPort: {{ default 8080 .Values.containerPort }}
          name: {{ include "configsvc.fullname" . }}
          protocol: {{ default "TCP" .Values.containerPortProtocol }}
        env: {{ include "opentelemetry_envs" . | nindent 8 -}}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: {{ .Values.dependencies.couchdbsecret }}
        - name: DB_URI
          value: {{ printf "http://%s:$(DB_PASSWORD)@%s.%s:5984/" (include "couchdb_usr" .) (include "couchdb_svc" .) .Release.Namespace }}
        - name: PAYMENT_DB_NAME
          value: {{ include "couchdb_dbp" . }}
        - name: TAXMGT_DB_NAME
          value: {{ include "couchdb_dbt" . }}
        - name: DB_NAME
          value: {{ include "couchdb_dbc" . }}
        - name: FLEXIBLE_PAYMENT_OPTIONS_DB_NAME
          value: {{ include "couchdb_dbf" . }}        
        - name: CONFIG_FILE_PATH
          value: /config/config.json
        - name: MESSAGE_SERVICE
          value: http://{{ .Values.dependencies.messagesvc.name }}.{{ .Release.Namespace }}
        - name: MESSAGE_SERVICE_PORT
          value: {{ .Values.dependencies.messagesvc.port | quote }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
          limits:
            cpu: {{ default "500m" .Values.resourcesLimitsCpu }}
            memory: {{ default "256Mi" .Values.resourcesLimitsMemory }}
          requests:
            cpu: {{ default "50m" .Values.resourcesRequestsCpu }}
            memory: {{ default "64Mi" .Values.resourcesRequestsMemory }}
        terminationMessagePath: {{ default "/dev/termination-log" .Values.containersTerminationMessagePath}}
        terminationMessagePolicy: {{ default "File" .Values.containersTerminationMessagePolicy}}
        volumeMounts:
        - mountPath: {{ default "/config" .Values.volumes.configMountPath }}
          name: {{ default "config" .Values.volumes.configName }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "configsvc.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }} 
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- if .Values.restartPolicy }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      volumes:
      - name: {{ default "config" .Values.volumes.configName }}
        configMap:
          defaultMode: {{ default 420 .Values.volumes.configDefaultMode }}
          name: {{ include "configsvc.fullname" . }}
          items:
          - key: config.json
            path: config.json
