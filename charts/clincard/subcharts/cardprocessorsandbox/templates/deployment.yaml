{{- if .Values.enabled }}
{{- if ne .Release.Namespace "prod" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {{ include "cardprocessorsandbox.labels" . | nindent 4 }}
  name: {{ template "cardprocessorsandbox.fullname" . }}
spec:
  progressDeadlineSeconds: {{ default 600 .Values.progressDeadlineSeconds  }}
  replicas: {{ .Values.replicas }}  
  revisionHistoryLimit: {{ default 10 .Values.revisionHistoryLimit  }}
  selector:
    matchLabels: {{ include "cardprocessorsandbox.selectorLabels" . | nindent 6 }}
      component: {{ template "cardprocessorsandbox.fullname" . }}
  {{- if .Values.rollingUpdateDeploymentStrategy.enabled }}
  strategy: 
    rollingUpdate: 
      maxSurge: {{ default "50%" .Values.rollingUpdateDeploymentStrategy.maxSurge }}
      maxUnavailable: {{ default "20%" .Values.rollingUpdateDeploymentStrategy.maxUnavailable }}
    type: RollingUpdate
  {{- end }}
  template:
    metadata:
      labels: {{ include "cardprocessorsandbox.labels" . | nindent 8 }}
        component: {{ template "cardprocessorsandbox.fullname" . }}
    spec:
      containers:
      - args:
        - -c
        - pip install python-logstash git+https://github.com/greenphire/jslog4kube.git && cardprocessorsandbox -d
        command:
        - /bin/bash
        env:
        {{- range $key, $value := .Values.customEnv }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }} 
        - name: REDIS_HOST
          value: {{ .Values.dependencies.redis }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: {{ .Values.dependencies.redis }}        
        image: {{ .Values.image }}
        imagePullPolicy: {{ default "Always" .Values.imagePullPolicy }}
        name: {{ template "cardprocessorsandbox.fullname" . }}
        ports:
        - containerPort: {{ default 8080 .Values.service.port }}
          name: {{ default "sandbox" .Values.service.containerPortName }}
          protocol: {{ default "TCP" .Values.service.protocol }}
        {{- with .Values.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources: {{- toYaml .Values.resources | nindent 10 }}          
        terminationMessagePath: {{ default "/dev/termination-log" .Values.containersTerminationMessagePath}}
        terminationMessagePolicy: {{ default "File" .Values.containersTerminationMessagePolicy}}
        volumeMounts:
        - mountPath: {{ default "/config" .Values.volumes.configMountPath }}
          name: {{ default "config" .Values.volumes.configName }}
      serviceAccountName: {{ include "cardprocessorsandbox.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ default "ClusterFirst" .Values.dnsPolicy }}
      restartPolicy: {{ default "Always" .Values.restartPolicy }}
      schedulerName: {{ default "default-scheduler" .Values.schedulerName }}
      terminationGracePeriodSeconds: {{ default 30 .Values.terminationGracePeriodSeconds }}
      volumes:
      - name: {{ default "config" .Values.volumes.configName }}
        configMap:
          defaultMode: {{ default 420 .Values.volumes.configDefaultMode }}
          name: {{ include "cardprocessorsandbox.fullname" . }}
          items:
          - key: config.json
            path: config.json
{{- end }}
{{- end }}