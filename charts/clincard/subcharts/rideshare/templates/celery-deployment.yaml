---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rideshare.celery.fullname" . }}
  labels: {{ include "rideshare.celery.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{ include "rideshare.celery.selectorLabels" . | nindent 6 }}
  {{- if not .Values.rideshareCelery.autoscaling.enabled }}
  replicas: {{ .Values.rideshareCelery.replicaCount }}
  {{- end }}
  progressDeadlineSeconds: {{ default 600 .Values.progressDeadlineSeconds  }}
  revisionHistoryLimit: {{ default 10 .Values.revisionHistoryLimit  }}
  {{- if .Values.rollingUpdateDeploymentStrategy.enabled }}
  strategy: 
    type: RollingUpdate
    rollingUpdate: {{ include "rideshare.rollingUpdateDeploymentStrategy" . | nindent 6 }}
  {{- end }}
  template:
    metadata:
      labels: {{ include "rideshare.celery.selectorLabels" . | nindent 8 }}        
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: {{ include "rideshare.celery.fullname" . }}
        image: {{ .Values.rideshareCelery.image }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy }}
        command: ["/bin/bash"]
        args:
        - -c
        - pip install python-logstash && celery worker --app ridesharesvc.rideshare_celery.app:app --loglevel info --queues rideshare_tasks
        ports:
        - containerPort: {{ default 8080 .Values.rideshareCelery.containerPort }}
          name: rideshare-svc
          protocol: {{ default "TCP" .Values.rideshareCelery.containerPortProtocol }}
        env: 
{{- include (print .Template.BasePath "/_common_envs.yaml.tpl") . | nindent 8 }}
        resources:
          {{- toYaml .Values.rideshareCelery.resources | nindent 10 }}          
        terminationMessagePath: {{ default "/dev/termination-log" .Values.containersTerminationMessagePath}}
        terminationMessagePolicy: {{ default "File" .Values.containersTerminationMessagePolicy}}
        volumeMounts:
        - mountPath: {{ default "/config" .Values.volumes.configMountPath }}
          name: {{ default "config" .Values.volumes.configName }}
        - mountPath: {{ default "/root/.ssh" .Values.volumes.ccsshMountPath }}
          name: {{ default "cc-ssh" .Values.volumes.ccsshName }}
      serviceAccountName: {{ include "rideshare.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- if .Values.restartPolicy }}
      restartPolicy: {{ .Values.restartPolicy }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      volumes:
      - name: {{ default "cc-ssh" .Values.volumes.ccsshName }}
        secret:
          defaultMode: {{ default 384 .Values.volumes.ccsshDefaultMode }}
          secretName: {{ .Values.dependencies.ccsshsecrets }}
      - name: {{ default "config" .Values.volumes.configName }}
        configMap:
          defaultMode: {{ default 420 .Values.volumes.configDefaultMode }}
          name: {{ include "rideshare.celery.fullname" . }}
          items:
          - key: config.json
            path: config.json