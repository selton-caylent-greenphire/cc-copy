{{ if .Values.service }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  serviceName: {{ .Values.name }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}  
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        command: ["redis-server", "/etc/redis/redis.conf", "--requirepass $(REDIS_PASSWORD)"]
        image: {{ .Values.image }}
        ports:
        - name: {{ .Values.name }}
          containerPort: {{ .Values.port }}
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: redis-password
              name: {{ .Values.dependencies.redisSecrets }}
        volumeMounts:
        - name: data
          mountPath: /data
        - name: conf
          mountPath: /etc/redis
        resources:
          requests:
            cpu: {{ default "10m" .Values.resourcesRequestCpu }}
            memory: {{ default "256Mi" .Values.resourcesRequestMemory }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "/usr/local/bin/redis-cli -h $(hostname) ping"
          initialDelaySeconds: {{ default "15" .Values.initialDelaySeconds }}
          timeoutSeconds: {{ default "5" .Values.timeoutSeconds }}
      initContainers:
        - name: set-somaxconn
          image: busybox
          command:
            - /bin/sh
            - -c
            - |
              sysctl -w net.core.somaxconn=65535
          securityContext:
            privileged: true
        - name: init-redis
          command:
            - bash
            - -c
            - "
              set -ex\n
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1\n
              ordinal=${BASH_REMATCH[1]}\n
              # Copy appropriate conf.d files from config-map to emptyDir.\n
              cp /mnt/config-map/shared.conf /mnt/conf/redis.conf\n
              # ordinal 0 is the first host\n
              if [[ $ordinal -eq 0 ]]; then\n
                cat /mnt/config-map/master.conf >> /mnt/conf/redis.conf\n
              else\n
                cat /mnt/config-map/slave.conf >> /mnt/conf/redis.conf\n
              fi\n "
          image: {{ .Values.image }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.imagePullPolicy }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: conf
              mountPath: /mnt/conf
            - name: config-map
              mountPath: /mnt/config-map
      volumes:
      - name: config-map
        configMap:
          name: {{ .Values.name }}
  volumeClaimTemplates:
  - metadata:
      name: data
      annotations:
        volume.alpha.kubernetes.io/storage-class: default
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi
  - metadata:
      name: conf
      annotations:
        volume.alpha.kubernetes.io/storage-class: default
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Mi
{{ end }}